[package]
name = "disarm64-cli"
version = "0.1.24"
edition = "2021"

authors = ["kromych <kromych@users.noreply.github.com>"]
description = """
disarm64 provides a tool and a library for decoding ARM64 instructions (at least 250 MiB/sec
of the decoding speed is delivered on a laptop that is used for development). Here you will
also find a utility for generating disassembler/instruction decoder tables in Rust from
a JSON file. Besides that, can visualize the instruction decoding as a tree.
"""
documentation = "https://github.com/kromych/disarm64"
homepage = "https://github.com/kromych/disarm64"
repository = "https://github.com/kromych/disarm64"
keywords = ["aarch64", "arm64", "arm-v8", "disassembler", "reverse-engineering"]
categories = ["command-line-utilities", "development-tools", "embedded"]
license = "Unlicense OR MIT"
readme = "../Readme.md"

[dependencies]
disarm64 = "0.1.24"
disarm64_defn = "0.1.11"

anyhow = "1"
clap = { version = "4", features = ["derive"] }
clap-num = "1"
env_logger = "0.11"
goblin = { version = "0.9", features = ["elf64", "pe64", "mach64"] }
log = "0.4"
memmap2 = "0.9"

[[bin]]
name = "disarm64"
path = "src/main.rs"

[features]
full = ["disarm64/full"]
load_store = ["disarm64/load_store"]
exception = ["disarm64/exception"]
system = ["disarm64/system"]
default = ["full"]
